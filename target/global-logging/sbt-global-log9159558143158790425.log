[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\jpora\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\jpora\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.8 (Oracle Corporation Java 19)
[debug]       Load.loadUnit: plugins took 135.7062ms
[debug]       Load.loadUnit: defsScala took 0.283899ms
[debug] [Loading] Scanning directory C:\Users\jpora\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jpora\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.618401 ms
[debug]           Load.resolveProject(global-plugins) took 54.2066ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\jpora\.sbt\1.0\plugins, plugins: List(<none>))) took 103.4282ms
[debug] [Loading] Done in C:\Users\jpora\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 131.0792ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.278301ms
[debug]     Load.loadUnit(file:/C:/Users/jpora/.sbt/1.0/plugins/, ...) took 276.6421ms
[debug]   Load.apply: load took 485.4364ms
[debug]   Load.apply: resolveProjects took 5.105ms
[debug]   Load.apply: finalTransforms took 72.465601ms
[debug]   Load.apply: config.delegates took 9.6198ms
[debug]   Load.apply: Def.make(settings)... took 426.7089ms
[debug]   Load.apply: structureIndex took 103.4197ms
[debug]   Load.apply: mkStreams took 1.3347ms
[info] loading global plugins from C:\Users\jpora\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2421.8031ms
[debug]           Load.loadUnit: plugins took 26.9253ms
[debug]           Load.loadUnit: defsScala took 0.003001ms
[debug] [Loading] Scanning directory C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\BouncingBallScala\BouncingBallsScala\project
[debug]             Load.loadUnit: mkEval took 6.419301ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\BouncingBallScala\BouncingBallsScala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.709501 ms
[info] loading settings for project bouncingballsscala-build from idea.sbt ...
[debug]               Load.resolveProject(bouncingballsscala-build) took 4.9301ms
[debug]             Load.loadTransitive: finalizeProject(Project(id bouncingballsscala-build, base: C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\BouncingBallScala\BouncingBallsScala\project, plugins: List(<none>))) took 7.1868ms
[debug] [Loading] Done in C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\BouncingBallScala\BouncingBallsScala\project, returning: (bouncingballsscala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2392.7379ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.855201ms
[debug]         Load.loadUnit(file:/C:/Users/jpora/OneDrive/Pulpit/Michal/scala_studia/BouncingBallScala/BouncingBallsScala/project/, ...) took 2429.5164ms
[debug]       Load.apply: load took 2430.987199ms
[debug]       Load.apply: resolveProjects took 0.194401ms
[debug]       Load.apply: finalTransforms took 16.233501ms
[debug]       Load.apply: config.delegates took 0.555001ms
[debug]       Load.apply: Def.make(settings)... took 92.233101ms
[debug]       Load.apply: structureIndex took 35.2182ms
[debug]       Load.apply: mkStreams took 0.003599ms
[info] loading project definition from C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\BouncingBallScala\BouncingBallsScala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4211.2516ms
[debug]     Load.loadUnit: defsScala took 0.003701ms
[debug] [Loading] Scanning directory C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\BouncingBallScala\BouncingBallsScala
[debug]       Load.loadUnit: mkEval took 0.4286ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.836 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 31.8862ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\BouncingBallScala\BouncingBallsScala, plugins: List(<none>))) took 36.0916ms
[debug] [Loading] Done in C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\BouncingBallScala\BouncingBallsScala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2763.042ms
[debug]     Load.loadUnit: cleanEvalClasses took 43.354099ms
[debug]   Load.loadUnit(file:/C:/Users/jpora/OneDrive/Pulpit/Michal/scala_studia/BouncingBallScala/BouncingBallsScala/, ...) took 7019.3052ms
[debug] Load.apply: load took 7024.729ms
[debug] Load.apply: resolveProjects took 0.3327ms
[debug] Load.apply: finalTransforms took 31.9633ms
[debug] Load.apply: config.delegates took 0.401699ms
[debug] Load.apply: Def.make(settings)... took 109.9542ms
[debug] Load.apply: structureIndex took 32.775ms
[debug] Load.apply: mkStreams took 0.0043ms
[info] set current project to BouncingBallsScala (in build file:/C:/Users/jpora/OneDrive/Pulpit/Michal/scala_studia/BouncingBallScala/BouncingBallsScala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60463 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60463, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to BouncingBallsScala (in build file:/C:/Users/jpora/OneDrive/Pulpit/Michal/scala_studia/BouncingBallScala/BouncingBallsScala/)
[debug] > Exec(idea-shell, None, None)
